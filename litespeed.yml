- name: Manage LiteSpeed Web Server on Localhost
  hosts: webservers
  become: yes
  vars:
    site:
      name: localhost
      domain: localhost
      doc_root: /usr/local/lsws/localhost/
    mysql:
      DATABASE_URL: "mysql://{{ mysql_user }}:{{ mysql_password }}@{{ mysql_host }}:{{ mysql_port }}/{{ mysql_database }}"
    lsws_dir: /usr/local/lsws
    owasp_dir: "{{ lsws_dir }}/conf/owasp"
    owasp_version: "4.3.0"
  tasks:
    - name: Ensure apt cache is up to date
      ansible.builtin.apt:
        update_cache: yes

    - name: Ensure LiteSpeed and required packages are installed
      ansible.builtin.apt:
        name:
          - openlitespeed
          - unzip
          - git
        state: present

    - name: Install pip for Python 3
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Install PyMySQL module
      ansible.builtin.pip:
        name: PyMySQL
        state: present

    - name: Ensure LiteSpeed is started and enabled
      ansible.builtin.service:
        name: lsws
        state: started
        enabled: yes

    - name: Ensure PHP 8.2 and extensions are installed
      ansible.builtin.apt:
        name:
          - lsphp82
          - lsphp82-common
          - lsphp82-mysql
          - lsphp82-curl
          - lsphp82-imap
          - lsphp82-intl
          - lsphp82-opcache
        state: present

    - name: Ensure PHP 8.2 is set as the default
      ansible.builtin.shell: |
        ln -sf /usr/local/lsws/lsphp82/bin/php /usr/bin/php
      args:
        creates: /usr/bin/php

    - name: Mark the directory as safe for Git
      ansible.builtin.shell: |
        git config --global --add safe.directory /usr/local/lsws/localhost
      become: true

    - name: Clone Bedrock repository with force
      ansible.builtin.git:
        repo: 'https://github.com/roots/bedrock.git'
        dest: "{{ site.doc_root }}"
        version: master
        force: true
      become: true

    - name: Create wp folder inside web folder
      ansible.builtin.file:
        path: "{{ site.doc_root }}web/wp"
        state: directory

    - name: Install WP-CLI
      ansible.builtin.shell: |
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        mv wp-cli.phar /usr/local/bin/wp
      args:
        creates: /usr/local/bin/wp

    - name: Download WordPress core files
      ansible.builtin.shell: |
        wp core download --path={{ site.doc_root }}web/wp --allow-root
      args:
        creates: "{{ site.doc_root }}web/wp/wp-admin"

    - name: Copy .env.example to .env
      ansible.builtin.copy:
        src: "{{ site.doc_root }}/.env.example"
        dest: "{{ site.doc_root }}/.env"
        remote_src: yes
        force: no
      become: true

    - name: Update Bedrock .env file for WP_HOME
      ansible.builtin.lineinfile:
        path: "{{ site.doc_root }}/.env"
        regexp: '^WP_HOME=.*'
        line: "WP_HOME='http://localhost'"
      notify: restart litespeed

    - name: Update Bedrock .env file for DATABASE_URL
      ansible.builtin.lineinfile:
        path: "{{ site.doc_root }}/.env"
        regexp: '^DATABASE_URL=.*'
        line: "DATABASE_URL='{{ mysql.DATABASE_URL }}'"
      notify: restart litespeed

    - name: Install Composer
      ansible.builtin.shell: |
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer

    - name: Install Bedrock dependencies with Composer
      ansible.builtin.shell: |
        composer install
      args:
        chdir: "{{ site.doc_root }}"

    - name: Ensure LiteSpeed listens on port 80 and configure virtual host
      ansible.builtin.blockinfile:
        path: "{{ lsws_dir }}/conf/httpd_config.conf"
        block: |
          listener Default {
            address                 *:80
            secure                  0
            map                     localhost *
          }
          # END ANSIBLE MANAGED BLOCK

          virtualHost localhost{
              vhRoot                   /usr/local/lsws/localhost/web/
              allowSymbolLink          1
              enableScript             1
              restrained               1
              maxKeepAliveReq
              smartKeepAlive
              setUIDMode               0
              chrootMode               0
              configFile               conf/vhosts/localhost/vhconf.conf
          }

    - name: Create localhost vhost directory
      ansible.builtin.file:
        path: "{{ lsws_dir }}/conf/vhosts/localhost"
        state: directory

    # - name: Create localhost vhost configuration file
      ansible.builtin.copy:
        dest: "{{ lsws_dir }}/conf/vhosts/localhost/vhconf.conf"
        content: |
          docRoot                   $VH_ROOT/
          vhDomain                  localhost
          adminEmails               root@localhost
          enableGzip                1
          index  {
            useServer               0
            indexFiles              index.php, index.html
          }

          scripthandler  {
            add                     lsapi:lsphp82 php
          }

          extprocessor lsphp82 {
            type                    lsapi
            address                 uds://tmp/lshttpd/lsphp.sock
            maxConns                35
            env                     PHP_LSAPI_CHILDREN=35
            initTimeout             60
            retryTimeout            0
            persistConn             1
            respBuffer              0
            autoStart               1
            path                    /usr/local/lsws/lsphp82/bin/lsphp
            extUser                 nobody
            extGroup                nogroup
            memSoftLimit            2047M
            memHardLimit            2047M
            procSoftLimit           400
            procHardLimit           500
          }

          module cache {
            storagePath /usr/local/lsws/cachedata/$vh_name
          }

    # - name: Create index.php in the document root
    #   ansible.builtin.copy:
    #     dest: "{{ site.doc_root }}web/index.php"
    #     content: |
    #       <?php
    #       echo "Hello, LiteSpeed!";

    - name: Create a PHP info file for testing
      ansible.builtin.copy:
        dest: "{{ site.doc_root }}web/info.php"
        content: |
          <?php phpinfo();

    - name: Set up OWASP ModSecurity rules
      block:
        - name: Create OWASP directory
          ansible.builtin.file:
            path: "{{ owasp_dir }}"
            state: directory

        - name: Download OWASP rules
          ansible.builtin.get_url:
            url: "https://github.com/coreruleset/coreruleset/archive/refs/tags/v{{ owasp_version }}.zip"
            dest: "{{ owasp_dir }}/owasp.zip"

        - name: Unzip OWASP rules
          ansible.builtin.unarchive:
            src: "{{ owasp_dir }}/owasp.zip"
            dest: "{{ owasp_dir }}"
            remote_src: yes

        - name: Configure OWASP rules
          ansible.builtin.template:
            src: modsec_includes.conf.j2
            dest: "{{ owasp_dir }}/modsec_includes.conf"

        - name: Enable ModSecurity in LiteSpeed
          ansible.builtin.lineinfile:
            path: "{{ lsws_dir }}/conf/httpd_config.conf"
            line: "module mod_security { modsecurity on modsecurity_rules `SecRuleEngine On` modsecurity_rules_file {{ owasp_dir }}/modsec_includes.conf }"
            insertafter: "^module cache"

    - name: Set up cron job for SSL renewal
      ansible.builtin.cron:
        name: "Renew Let's Encrypt SSL certificates"
        job: "{{ lsws_dir }}/admin/misc/letsencrypt.sh {{ site.domain }} --renew"
        special_time: daily

    - name: Install and activate theme
      ansible.builtin.shell: |
        wp theme install twentytwentyfour --activate --path={{ site.doc_root }}web/wp --allow-root
      args:
        chdir: "{{ site.doc_root }}web/wp"

    - name: Gather LiteSpeed error logs
      ansible.builtin.fetch:
        src: "{{ lsws_dir }}/logs/error.log"
        dest: "/mnt/c/Users/khaled/OneDrive/Desktop/Softylus/ansable/logs/error.log"
        flat: yes

    - name: Gather LiteSpeed access logs
      ansible.builtin.fetch:
        src: "{{ lsws_dir }}/logs/access.log"
        dest: "/mnt/c/Users/khaled/OneDrive/Desktop/Softylus/ansable/logs/access.log"
        flat: yes

    - name: Restart LiteSpeed
      ansible.builtin.service:
        name: lsws
        state: restarted

  handlers:
    - name: restart litespeed
      ansible.builtin.service:
        name: lsws
        state: restarted
